* 《大话数据结构》摘录
** 数据结构绪论 
   启示：数据结构是相互之间存在一种或多种特定关系的数据元素的集合。

*** 数据结构起源
    数据结构是一门研究非数值计算问题的程序设计问题中的操作对象，以及它们之间关系和操作等相关问题的学科。

    程序设计 = 数据结构 + 算法

    程序设计的本质是对特定的问题选择一种好的数据结构，加上设计一种好的算法。
*** 基本概念和术语
**** 数据
     数据是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。

     图像、音频、视频等可以通过编码的手段变成字符数据来处理。

**** 数据元素
     数据元素是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。也被称为记录。

**** 数据项
     数据项是数据不可分割的最小单位，一个数据元素可以由若干个数据项组成。

     真正讨论问题时，数据元素是数据结构中建立数据模型的着眼点。

**** 数据对象
     数据对象是性质相同的数据元素的结合，是数据的子集。

**** 数据结构
     结构，简单的理解就是关系，严格点说，结构是指各个组成部分相互搭配和排列的方式。

     数据结构是相互之间存在一种或多种特定关系的数据元素的集合。

     为编写出一个“好”的程序，必须分析待处理对象的特性及各处理对象之间存在的关系。这也是研究数据结构的意义所在。

*** 逻辑结构和物理结构
    逻辑结构是面向问题的，物理结构是面向计算机的，其基本的目标就是将数据及其逻辑关系存储到计算机的内存中。

**** 逻辑结构
     逻辑结构是指数据对象中数据元素之间的相互关系。

***** 集合结构
      集合结构中的数据元素除了同属于一个集合外，它们之间没有其他关系。

***** 线性结构
      线性结构中的数据元素之间是一对一的关系。

***** 树形结构
      树形结构中的数据元素之间存在一种一对多的层次关系。

***** 图形结构
      图形结构中的数据元素是多对多的关系。

**** 物理结构
     物理结构是指数据的逻辑结构在计算机的存储形式。

***** 顺序存储结构
      顺序存储结构是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。

***** 链式存储结构
      链式存储结构是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。

*** 抽象数据类型
**** 数据类型
     数据类型是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。
     
     数据类型是按照值的不同进行划分的。类型就是用来说明变量或表达式的取值范围和所能进行的操作。

     在 C 语言中，按照取值的不同，数据类型可以分为两类：
     1. 原子类型：是不可以再分解的基本类型，包括整型、实型、字符型等；
     2. 结构类型：由若干个类型组合而成，是可以再分解的。
     
     抽象是指抽取出事物具有的普遍性的本质。它是抽出问题的特征而忽略非本质的细节，是对具体事物的一个概括。抽象是一种思考问题的方式，它隐藏了繁杂的细节，只保留实现目标所必需的信息。

**** 抽象数据类型
     抽象数据类型是指一个数学模型及定义在该模型上的一组操作。
     
     抽象数据类型体现了程序设计中问题分解、抽象和信息隐藏的特性。

** 算法
   启示： 算法是解决特定问题求解步骤的描述,在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。

*** 数据结构和算法的关系
    在《数据结构》课程中，谈算法是为了帮助理解好数据结构。

*** 算法定义
    算法是描述解决问题的方法。

    算法是解决特定问题求解步骤的描述,在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。

*** 算法的特性
**** 输入输出
     算法具有零个或多个输入，算法至少有一个或多个输出。

**** 有穷性
     有穷性指算法在执行有限的步骤之后，自动结束而不会出现无限循环，并且每一个步骤在可接受的时间内完成。

**** 确定性
     确定性指算法的每一个步骤都具有确定的含义，不会出现二义性。

**** 可行性
     可行性指算法的每一步都是可行的，也就是说，每一步都能够通过执行有限次数完成。

*** 算法设计的要求
    算法不是唯一的。也就说，同一个问题，可以有多种解决问题的算法。
**** 正确性
**** 可读性
     可读性指算法便于阅读、理解和交流。
**** 健壮性
     健壮性指当输入数据不合法时，算法也能做出相关的处理，而不是产生异常或莫名其妙的结果。

**** 时间效率高和存储量低
    
*** 函数的渐近增长


* 《大话数据结构》评注 
** 数据结构绪论
*** 数据结构起源
    
    通过阅读 Mininx 3 的源码 和 MRI 的源码，可以体会 程序设计 = 数据结构 + 算法。

**** 数据结构
     
     在 Rails 应用开发过程中，可以视 Model 为数据结构层面的东西。
*** 抽象数据类型
**** 数据类型

     数据分型的原因是内存资源的有限性。
     

